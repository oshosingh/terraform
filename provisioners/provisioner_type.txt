Terraform has capability to turn provisioners both at the time of resource creation as well as destruction.

There are two main types of provisioner:
1. Local Exec
2. Remote Exec
3. etc. (see docs)

local-exec provisioner allow us to invoke local executable after resource is created

provisioner "local-exec" {
    command = "echo ${aws_instance.myec2.private-ip} >> private_ips.txt"
}

**** local exec can be used to run ansible-playbooks



There are two primary types of provisioners:

1. Creation-Time provisioner (without when = destroy provisioners)
   Creation-Time provisioners are only run during creation, not during updating or any other lifecycle. If a creation-time provisioner fails, the resource is marked as tainted.
   
2. Destroy-Time provisioner
   Destroy provisioners are run before the resource is destroyed
   If when = destroy is specified, the provisioner will run when the resource it is defined within is destroyed.
   
   provisioner "local-exec" {
        when = destroy
        command = "echo 'destroy-timeprovisioner'"
   }
   
   provisioner "remote-exec" {
        inline = [
            "sudo yum -y install nano"
        ]   
        
        on_failure = continue ## Failure Behaviour
   }
   
   
-------------------------------------------------
Provisioner - Failure Behaviour

By default, provisioners that fail will also cause the Terraform apply iteself to fail.

The on_failure setting can be used to change this. The allowed values are:

continue -> Ignore the error and continue with creation or destruction
fail -> Raise an error and stop applying (default behaviour)

   
